
{% extends 'base.html.twig' %}

{% block title %}Liste des Clients{% endblock %}

{% block body %}


    {% for message in app.flashes('error') %}
    <div class="bg-red-600 text-white p-4 rounded mb-4">
        {{ message }}
    </div>
{% endfor %}


    <div class="container mx-auto p-6">
        <!-- Header with button to add client -->
        <div class="flex justify-between items-center mb-4">
            <h1 class="text-2xl font-bold">Liste des Clients</h1>
            <a href="javascript:void(0);" onclick="openAddClientModal()" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                Ajouter un client
            </a>
        </div>

        <!-- Filter by phone number -->
        <div class="mb-4">
            <input 
                type="text" 
                placeholder="Rechercher par téléphone..." 
                class="w-full px-4 py-2 border rounded-lg"
                oninput="filterClients(this.value)"
            />
        </div>

        <!-- Table of clients -->
        <table class="min-w-full table-auto bg-white border border-gray-300 rounded-lg shadow-md">
            <thead class="bg-blue-500 text-white">
                <tr>
                    <th class="px-4 py-2 text-left">Nom</th>
                    <th class="px-4 py-2 text-left">Téléphone</th>
                    <th class="px-4 py-2 text-left">Montant Dû</th>
                    <th class="px-4 py-2 text-left">Actions</th>
                </tr>
            </thead>
            <tbody id="client-list">
                {% for item in clientsWithDebt %}
                    <tr class="border-b hover:bg-gray-100">
                        <td class="px-4 py-2">{{ item.client.surname }}</td>
                        <td class="px-4 py-2">{{ item.client.telephone }}</td>
                        <td class="px-4 py-2">{{ item.montantRestant | default(0) }} €</td>
                        <td class="px-4 py-2">
                            <a href="{{ path('client_show', {'id': item.client.id}) }}" class="text-blue-500 hover:underline">Voir</a>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="4" class="px-4 py-2 text-center text-gray-500">Aucun client trouvé</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <!-- Modal for adding a new client -->
    <div id="addClientModal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 hidden">
        <div class="bg-white p-6 rounded-lg shadow-lg w-1/3">
            <h2 class="text-xl font-bold mb-4">Ajouter un Client</h2>
            <form action="{{ path('client_create') }}" method="post">
                <div id="error-message" class="text-red-500 text-sm mb-4"></div>

                <div class="mb-4">
                    <label for="surname" class="block text-sm font-medium text-gray-700">Nom</label>
                    <input type="text" id="surname" name="surname" class="w-full px-4 py-2 border rounded-lg" required>
                </div>
                <div class="mb-4">
                    <label for="telephone" class="block text-sm font-medium text-gray-700">Téléphone</label>
                    <input type="text" id="telephone" name="telephone" class="w-full px-4 py-2 border rounded-lg" required>
                </div>
                <div class="mb-4">
                    <label for="adresse" class="block text-sm font-medium text-gray-700">Adresse</label>
                    <textarea id="adresse" name="adresse" class="w-full px-4 py-2 border rounded-lg" required></textarea>
                </div>
                <div class="mb-4">
                    <label for="user_account_id" class="block text-sm font-medium text-gray-700">Lier un utilisateur</label>
                    <select id="user_account_id" name="user_account_id" class="w-full px-4 py-2 border rounded-lg">
                        <option value="">Aucun utilisateur</option>
                        {% for user in users %}
                            <option value="{{ user.id }}">{{ user.username }}</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="flex justify-end">
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Ajouter</button>
                    <button type="button" onclick="closeAddClientModal()" class="ml-2 bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600">Annuler</button>
                </div>
            </form>
        </div>
    </div>

    <!-- JavaScript for modal and client filtering -->
    <script>
        // Open the modal to add a client
        function openAddClientModal() {
            document.getElementById('addClientModal').classList.remove('hidden');
        }

        // Close the modal without saving
        function closeAddClientModal() {
            document.getElementById('addClientModal').classList.add('hidden');
        }

        // Filter clients based on phone number input
        function filterClients(value) {
            const filter = value.toLowerCase();
            const rows = document.querySelectorAll("#client-list tr");

            rows.forEach(row => {
                const telephone = row.querySelector("td:nth-child(2)").textContent.toLowerCase();
                row.style.display = telephone.includes(filter) ? "" : "none";
            });
        }

          const existingClients = {{ clientsWithDebt | json_encode() | raw }};

function isClientExisting(surname, telephone) {
    return existingClients.some(client => 
        client.client.surname.toLowerCase() === surname.toLowerCase() || 
        client.client.telephone === telephone
    );
}

// Met à jour l'état du formulaire en fonction de l'existence du client
function validateForm() {
    const surname = document.getElementById('surname').value.trim();
    const telephone = document.getElementById('telephone').value.trim();
    const surnameInput = document.getElementById('surname');
    const telephoneInput = document.getElementById('telephone');
    let valid = true;

    if (isClientExisting(surname, telephone)) {
        surnameInput.classList.add('border-red-500');
        telephoneInput.classList.add('border-red-500');
        document.getElementById('error-message').textContent = 
            "Un client avec ce nom ou téléphone existe déjà.";
        valid = false;
    } else {
        surnameInput.classList.remove('border-red-500');
        telephoneInput.classList.remove('border-red-500');
        document.getElementById('error-message').textContent = "";
    }
    return valid;
}

// Lors de la soumission du formulaire
document.querySelector('form').addEventListener('submit', function (event) {
    if (!validateForm()) {
        event.preventDefault(); // Annule l'envoi du formulaire
    }
});

// Validation en direct
['input', 'blur'].forEach(event => {
    document.getElementById('surname').addEventListener(event, validateForm);
    document.getElementById('telephone').addEventListener(event, validateForm);
});


        
    </script>
{% endblock %}
